// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthService is a mock of AuthService interface.
type MockAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceMockRecorder
}

// MockAuthServiceMockRecorder is the mock recorder for MockAuthService.
type MockAuthServiceMockRecorder struct {
	mock *MockAuthService
}

// NewMockAuthService creates a new mock instance.
func NewMockAuthService(ctrl *gomock.Controller) *MockAuthService {
	mock := &MockAuthService{ctrl: ctrl}
	mock.recorder = &MockAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthService) EXPECT() *MockAuthServiceMockRecorder {
	return m.recorder
}

// GetID mocks base method.
func (m *MockAuthService) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockAuthServiceMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockAuthService)(nil).GetID))
}

// GetSignature mocks base method.
func (m *MockAuthService) GetSignature(endpoint, timestamp string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSignature", endpoint, timestamp)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSignature indicates an expected call of GetSignature.
func (mr *MockAuthServiceMockRecorder) GetSignature(endpoint, timestamp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSignature", reflect.TypeOf((*MockAuthService)(nil).GetSignature), endpoint, timestamp)
}

// GetTimestamp mocks base method.
func (m *MockAuthService) GetTimestamp(t time.Time) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTimestamp", t)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetTimestamp indicates an expected call of GetTimestamp.
func (mr *MockAuthServiceMockRecorder) GetTimestamp(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTimestamp", reflect.TypeOf((*MockAuthService)(nil).GetTimestamp), t)
}
